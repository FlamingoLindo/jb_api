# Generated by Django 4.2.19 on 2025-04-29 03:25

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='Brands')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_class', models.CharField(choices=[('05-FERROS TREFILADOS 1020', '05-FERROS TREFILADOS 1020'), ('06-FERROS TREFILADOS 1045', '06-FERROS TREFILADOS 1045'), ('33-8620-8640', '33-8620-8640'), ('34-4140-4340', '34-4140-4340'), ('30-AÇO INOX', '30-AÇO INOX'), ('25-FERRO REDONDO MECÂNICO', '25-FERRO REDONDO MECÂNICO'), ('29-VC-131', '29-VC-131'), ('35-VND', '35-VND'), ('28-AÇO PRATA', '28-AÇO PRATA'), ('08-AÇO 1112', '08-AÇO 1112'), ('21-FERROS CHATOS', '21-FERROS CHATOS'), ('22-FERROS CANTONEIRAS', '22-FERROS CANTONEIRAS'), ('24-FERRO QUADRADO', '24-FERRO QUADRADO'), ('23-FERRO TEE', '23-FERRO TEE'), ('37-F.FUNDIDO', '37-F.FUNDIDO'), ('26-PLÁSTICOS DE ENGENHARIA', '26-PLÁSTICOS DE ENGENHARIA'), ('27-TUBOS MECÂNICOS', '27-TUBOS MECÂNICOS'), ('20-LATÃO', '20-LATÃO'), ('36-BRONZE TM 23-620', '36-BRONZE TM 23-620'), ('19-BUCHAS DE BRONZE TM 23', '19-BUCHAS DE BRONZE TM 23'), ('32-ALUMÍNIO', '32-ALUMÍNIO'), ('31-COBRE', '31-COBRE'), ('10-CHAPAS CORTADAS', '10-CHAPAS CORTADAS'), ('11-CHAPAS DOBRADAS', '11-CHAPAS DOBRADAS'), ('09-VIGAS LAMINADAS', '09-VIGAS LAMINADAS'), ('12-TUBOS REDONDOS', '12-TUBOS REDONDOS'), ('13-TUBOS QUADRADOS', '13-TUBOS QUADRADOS'), ('16-TUBO DIN 2440', '16-TUBO DIN 2440'), ('17-TUBO SCH 80', '17-TUBO SCH 80'), ('18-TUBOS TREFILADOS', '18-TUBOS TREFILADOS'), ('14-TUBOS RETANGULARES', '14-TUBOS RETANGULARES'), ('15-TUBOS GALVANIZADOS', '15-TUBOS GALVANIZADOS')], max_length=200)),
                ('item_type', models.CharField(choices=[('REDONDO', 'REDONDO'), ('REDONDO MM', 'REDONDO MM'), ('SEXTAVADO', 'SEXTAVADO'), ('QUADRADO', 'QUADRADO'), ('AÇO 4140', 'AÇO 4140'), ('AÇO 4340', 'AÇO 4340'), ('CANTONEIRA', 'CANTONEIRA'), ('CHATO', 'CHATO'), ('TUBO REDONDO', 'TUBO REDONDO'), ('TUBO QUADRADO', 'TUBO QUADRADO'), ('TUBO SCH', 'TUBO SCH'), ('TUBO RETANGULAR', 'TUBO RETANGULAR'), ('AÇO 1020', 'AÇO 1020'), ('AÇO 1045', 'AÇO 1045'), ('COLUNA1', 'COLUNA1'), ('TEE', 'TEE'), ('REDONDO CINZENDO', 'REDONDO CINZENDO'), ('REDONDO NODULAR', 'REDONDO NODULAR'), ('QUADRADO CINZENTO', 'QUADRADO CINZENTO'), ('RETANGULAR CINZENTO', 'RETANGULAR CINZENTO'), ('TARUGO DE NYLON 6,0', 'TARUGO DE NYLON 6,0'), ('TARUGO DE NYLON 6,0 QUADRADO', 'TARUGO DE NYLON 6,0 QUADRADO'), ('TARUGO DE NYLON TECHNYL 6.6', 'TARUGO DE NYLON TECHNYL 6.6'), ('TARUGO PP  (POLIPROPILENO)', 'TARUGO PP  (POLIPROPILENO)'), ('TARUGO DE POLIACETAL(POM)', 'TARUGO DE POLIACETAL(POM)'), ('TARUGO UHMW', 'TARUGO UHMW'), ('TEFLON', 'TEFLON'), ('TARUGO CELERON', 'TARUGO CELERON'), ('TM 23', 'TM 23'), ('TM 620', 'TM 620'), ('BUCHA', 'BUCHA'), ('TUBO', 'TUBO'), ('CORTADAS', 'CORTADAS'), ('DOBRADAS', 'DOBRADAS'), ('VIGA U', 'VIGA U'), ('VIGA I', 'VIGA I'), ('VIGA PERFIL I', 'VIGA PERFIL I'), ('VIGA PERFIL H', 'VIGA PERFIL H'), ('TUBO DIN', 'TUBO DIN'), ('SCH40', 'SCH40'), ('SCH80', 'SCH80'), ('TUBO GALVANIZADO', 'TUBO GALVANIZADO'), ('TUBO TREFILADO', 'TUBO TREFILADO')], max_length=200)),
                ('item_name', models.CharField(max_length=200)),
                ('weight_mt', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('weight_kg_no_cut', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('value_meter', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cut_percent', models.IntegerField(blank=True, null=True)),
                ('value_kg_w_cut', models.DecimalField(decimal_places=2, max_digits=10)),
                ('parts_amount', models.IntegerField(blank=True, null=True)),
                ('weight_mm', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('length_mm', models.IntegerField(blank=True, null=True)),
                ('value_w_cut', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('weight_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('value_no_cut', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Item',
                'verbose_name_plural': 'Items',
                'ordering': ['item_name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('original_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('image', models.ImageField(blank=True, null=True, upload_to='Products')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Products', to='jb.brand')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(3)])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. Permissions are inherited from each of their groups.', related_name='customuser_groups', related_query_name='customuser_group', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_permissions', related_query_name='customuser_permission', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['-createdAt'],
            },
        ),
    ]
